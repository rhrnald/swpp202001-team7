.SUFFIXES : .cpp .o

SRC_ALL=$(wildcard src/*.cpp)
SRC=$(filter-out src/test_main.cpp, $(SRC_ALL))
SRC_TEST=$(filter-out src/main.cpp, $(SRC_ALL))
OBJ=$(SRC:src/%.cpp=obj/%.o)
OBJ_TEST=$(SRC_TEST:src/%.cpp=obj/%.o) obj/gtest_all.o
DEPS=$(wildcard src/*.h)
_dummy := $(shell mkdir -p obj)

#####
OPT_SRC=$(wildcard optimizations/*.cpp)
OPT_OBJ=$(OPT_SRC:optimizations/%.cpp=obj/%.o)
#####

all: bin/sf-compiler-team7 bin/interpreter #sf-compiler sf-compiler-tests

sf-compiler: $(team7opt) $(OBJ)
	@$(CXX) $(LDFLAGS) -o sf-compiler $(OBJ)

#####
bin/sf-compiler-team7: $(OBJ) $(OPT_OBJ)
	@mkdir -p bin
	@echo Linking sf-compiler-team7 ...
	@$(CXX) $(LDFLAGS) -o bin/sf-compiler-team7 $(OBJ) $(OPT_OBJ)

bin/interpreter:
	@rm -r -f ./interpreter/build
	@./interpreter/build.sh
#####


sf-compiler-tests: $(OBJ_TEST)
	@$(CXX) $(LDFLAGS) -o sf-compiler-tests $(OBJ_TEST)

test: sf-compiler-tests
	@./sf-compiler-tests
	@./run-filechecks.sh $(FILECHECK_PATH)

obj/SimpleBackend.o: src/SimpleBackend.cpp $(DEPS)
	@echo Building obj/SimpleBackend.o ...
	@$(CXX) $(CXXFLAGS) -c -o $@ $<

obj/AssemblyEmitter.o: src/AssemblyEmitter.cpp $(DEPS)
	@echo Building obj/AssemblyEmitter.o ...
	@$(CXX) $(CXXFLAGS) -c -o $@ $<

obj/main.o: src/main.cpp $(DEPS) $(OPT_DEPS)
	@echo Building obj/main.o ...
	@$(CXX) $(CXXFLAGS) -c -o $@ $<

obj/test_main.o: src/test_main.cpp $(DEPS)
	@echo Building obj/test_main.o ...
	@$(CXX) $(CXXFLAGS) -c -o $@ $<

obj/gtest_all.o: $(GTESTSRC)
	@echo Building obj/gtest_all.o ...
	@$(CXX) $(CXXFLAGS) -c -o $@ $<

#####
obj/%.o: optimizations/%.cpp optimizations/%.h
	@echo Building $@ ...
	@$(CXX) $(CXXFLAGS) -c -o $@ $<
#####

clean:
	rm -f bin/* sf-compiler sf-compiler-tests obj/*.o
