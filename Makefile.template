.SUFFIXES : .cpp .o

#Set variable
CORE_SRC=$(wildcard src/core/*.cpp)
PASSES_SRC=$(wildcard src/passes/*.cpp)
TEST_SRC=$(wildcard src/test/*.cpp)

CORE_OBJ=$(CORE_SRC:src/core/%.cpp=obj/core/%.o)
PASSES_OBJ=$(PASSES_SRC:src/passes/%.cpp=obj/passes/%.o)
TEST_OBJ=$(TEST_SRC:src/test/%.cpp=obj/test/%.o) obj/gtest_all.o

_dummy := $(shell mkdir -p obj) $(shell mkdir -p obj/core) $(shell mkdir -p obj/passes) $(shell mkdir -p obj/test)

all: bin/sf-compiler-team7 #bin/interpreter #sf-compiler-tests

#Build Core
bin/sf-compiler-team7: $(PASSES_OBJ) $(CORE_OBJ)
	@mkdir -p bin
	@echo Linking sf-compiler-team7 ...
	@$(CXX) $(LDFLAGS) -o bin/sf-compiler-team7 $(CORE_OBJ) $(PASSES_OBJ)

#Build Test Core
bin/sf-compiler-tests-team7: $(CORE_OBJ) $(PASSES_OBJ) $(TEST_OBJ)
	@echo Linking sf-compiler-team7 ...
	@$(CXX) $(LDFLAGS) -o bin/sf-compiler-team7 $(PASSES_OBJ) $(CORE_OBJ)

#Build Interpreter
bin/interpreter:
	@rm -r -f ./interpreter/build
	@./interpreter/build.sh


#Build Objects
obj/core/%.o: src/core/%.cpp 
	@echo Building $@ ...
	@$(CXX) $(CXXFLAGS) -c -o $@ $<

obj/passes/%.o: src/passes/%.cpp src/passes/%.h
	@echo Building $@ ...
	@$(CXX) $(CXXFLAGS) -c -o $@ $<

obj/test/%.o: src/test/%.cpp src/test/%.h
	@echo Building $@ ...
	@$(CXX) $(CXXFLAGS) -c -o $@ $<

obj/gtest_all.o: $(GTESTSRC)
	@echo Building obj/gtest_all.o ...
	@$(CXX) $(CXXFLAGS) -c -o $@ $<

#Tests
sf-compiler-tests: $(OBJ_TEST)
	@$(CXX) $(LDFLAGS) -o sf-compiler-tests $(OBJ_TEST)

test: sf-compiler-tests
	@./sf-compiler-tests
	@./run-filechecks.sh $(FILECHECK_PATH)

#clean
clean:
	rm -rf bin obj
